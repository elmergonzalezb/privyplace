---
- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes

- name: Download k3s binary x64
  get_url:
    url: https://github.com/rancher/k3s/releases/download/{{ k3s_version }}/k3s
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 755
    checksum: "sha256:https://github.com/rancher/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt"
  notify: restart k3s service

- name: Copy K3s service file
  register: k3s_service
  template:
    src: "k3s.service.j2"
    dest: "/etc/systemd/system/k3s.service"
    owner: root
    group: root
    mode: 0755
  notify: restart k3s service

- name: Enable and check K3s service
  systemd:
    name: k3s
    daemon_reload: yes
    state: started
    enabled: yes

- name: Wait for node-token
  wait_for:
    path: /var/lib/rancher/k3s/server/node-token

- name: Read node-token from master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token

- name: Store Master node-token
  set_fact: 
    token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

- name: Create directory .kube
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    owner: "{{ ansible_env.USER }}"

- name: Copy config file to user home directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "{{ ansible_env.HOME }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_env.USER }}"

- name: Replace https://localhost:6443 by https://master-pi:6443
  replace:
    path: "{{ ansible_env.HOME }}/.kube/config"
    regexp: 'https://localhost:6443'
    replace: 'https://{{master_ip}}:6443'

- name: Create kubectl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Create crictl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    state: link