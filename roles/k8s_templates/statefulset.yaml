---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ statefulset_name | default(app)}}
  namespace: {{ target_namespace }}
  labels:
    app: {{ statefulset_name | default(app)}}
    app.kubernetes.io/name: "{{ statefulset_name | default(app)}}"
    app.kubernetes.io/part-of: "{{ statefulset_partof | default(app)}}"
    app.kubernetes.io/managed-by: privyplace
{% if dstatefulset_labels is defined %}{% for key, value in statefulset_labels.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}{% endif %}
{% if labels is defined %}{% for key, value in labels.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}{% endif %}
spec:
{% if statefulset_replicas is defined %}
  replicas: {{ statefulset_replicas }}
{% endif %}
  selector:
    matchLabels:
      app: {{ statefulset_name | default(app)}}
      app.kubernetes.io/name: "{{ statefulset_name | default(app)}}"
      app.kubernetes.io/part-of: "{{ statefulset_partof | default(app)}}"
      app.kubernetes.io/managed-by: privyplace
  template:
    metadata:
      labels:
        app: {{ statefulset_name | default(app)}}
        app.kubernetes.io/name: "{{ statefulset_name | default(app)}}"
        app.kubernetes.io/part-of: "{{ statefulset_partof | default(app)}}"
        app.kubernetes.io/managed-by: privyplace
    spec:
      {{ statefulset_spec | indent(width=6) }}
{% if volumeclaimtemplates is defined %}
  volumeClaimTemplates:
{% for volumeclaimtemplate, templatespec in volumeclaimtemplates.items() %}
  - metadata:
      name: {{ volumeclaimtemplate }}
    spec:
      accessModes: [ "{{ templatespec.accessmode | default('ReadWriteOnce')}}" ]
      storageClassName: "{{ templatespec.storageclass | default('local-path')}}"
      resources:
        requests:
          storage: {{ templatespec.storage }}
{% endfor %}
{% endif %}
